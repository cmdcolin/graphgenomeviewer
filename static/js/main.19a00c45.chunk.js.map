{"version":3,"sources":["FeatureDialog.js","../../lib/dist/util.js","../../lib/dist/index.js","Sidebar.js","SettingsDialog.js","Header.js","util.js","App.js","index.js"],"names":["FeatureDialog","data","onHide","Modal","show","Header","closeButton","Title","Body","Object","entries","filter","entry","includes","map","key","value","style","display","maxHeight","margin","backgroundColor","minWidth","wordBreak","overflow","String","tags","keys","length","Footer","Button","variant","onClick","makePath","edges","path","i","st","push","source","x","y","last","target","generatePaths","graph","reduce","rv","v","Function","undefined","el","find","r","values","links","original","projectLine","x1","y1","x2","y2","dt","d","Math","sqrt","schemeCategory10","d3interpolate","Graph","React","forwardRef","props","ref","drawPaths","drawLabels","drag","settings","chunkSize","linkSteps","sequenceThickness","linkThickness","theta","strengthCenter","color","width","height","redraw","onFeatureClick","console","log","useRef","current","useMemo","G","Gp","nodes","seen","paths","pathNodes","split","j","curr","name","id","sequence","rest","linkNum","concat","strand1","strand2","loop","link","reprocessGraph","colors","fromEntries","p","useEffect","innerHTML","simulation","forceSimulation","charge_force","forceManyBody","strength","center_force","forceCenter","link_force","forceLink","distance","iterations","force","on","node","attr","nodePathMap","l","pathIndex","drx","dry","xRotation","largeArc","same","slice","lastIndexOf","s1","t1","t2","dotresult","dot","Number","isNaN","s2","m1","m2","m3","abs","dx","dy","dr","random","sweep","cx1","cy1","cx2","cy2","edgepaths","svg","select","append","g","selectAll","newlinks","pathIds","pathId","indexOf","generateLinks","join","nodeIndex","findIndex","startsWith","replace","toLowerCase","hsl","darker","_","enter","text","sid","d3drag","event","active","alphaTarget","restart","fx","fy","drag_handler","zoom_handler","d3zoom","transform","createElement","fontSize","viewBox","toString","Sidebar","onDrawLabels","onColorChange","onDrag","onPathDraw","onRedraw","colorScheme","Form","Label","Control","onChange","as","Group","Check","checked","type","label","SettingsDialog","paramSettings","onSettings","useState","setSettings","size","onSubmit","preventDefault","Row","column","sm","Text","muted","Col","val","min","max","AboutDialog","pkg","version","href","OpenURLDialog","onData","setValue","OpenFileDialog","onGraph","a","files","onExportSVG","showAbout","setShowAbout","showSettings","setShowSettings","showOpenURL","setShowOpenURL","showOpenFile","setShowOpenFile","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","className","NavDropdown","title","Item","Link","parseTag","tag","App","featureData","setFeatureData","setData","error","setError","updateState","forceUpdate","useCallback","setRedraw","useQueryParams","withDefault","NumberParam","strengthXY","forceSteps","forceType","StringParam","dataset","BooleanParam","query","setQuery","fetch","result","ok","Error","statusText","message","file","header","line","headerLine","forEach","len","seq","tagfields","gfa1","LN","cigar","source1","target1","charAt","parseGFA","saveAs","xmlns","cloneNode","fragment","window","location","walker","document","createTreeWalker","NodeFilter","SHOW_ELEMENT","nextNode","currentNode","attributes","setAttributeNS","string","XMLSerializer","serializeToString","Blob","serialize","onModal","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.19a00c45.chunk.js","sourcesContent":["import React from 'react'\nimport { Button, Modal } from 'react-bootstrap'\n\nexport function FeatureDialog({ data, onHide }) {\n  return (\n    <Modal show={true} onHide={onHide}>\n      <Modal.Header closeButton>\n        <Modal.Title>Feature details</Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        <div>Attributes</div>\n        {Object.entries(data)\n          .filter(entry => !['source', 'target', 'linkNum', 'tags'].includes(entry[0]))\n          .map(([key, value]) => (\n            <div\n              key={`${key}_${value}`}\n              style={{ display: 'flex', maxHeight: 150, margin: 3 }}\n            >\n              <div style={{ backgroundColor: '#dda', minWidth: 100 }}>{key}</div>\n              <div style={{ wordBreak: 'break-word', overflow: 'auto' }}>\n                {String(value)}\n              </div>\n            </div>\n          ))}\n        <hr />\n        {data.tags && Object.keys(data.tags).length ? (\n          <>\n            <div>Tags</div>\n            {Object.entries(data.tags).map(([key, value]) => (\n              <div\n                key={`${key}_${value}`}\n                style={{ display: 'flex', maxHeight: 150, margin: 3 }}\n              >\n                <div style={{ backgroundColor: '#dda', minWidth: 100 }}>{key}</div>\n                <div style={{ wordBreak: 'break-word', overflow: 'auto' }}>\n                  {String(value)}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={onHide}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal.Body>\n    </Modal>\n  )\n}\n","// Given a GFA graph with sequence nodes ('S' tags), it breaks the S tags into\n// multiple nodes depending on how long the sequence is, which gives the graph\n// an organic look when the layout algorithm is applied\nexport function reprocessGraph(G, chunkSize) {\n  const Gp = {\n    nodes: [],\n    links: []\n  };\n  const seen = {};\n\n  for (let i = 0; i < (G.paths || {}).length; i++) {\n    const path = G.paths[i];\n    const pathNodes = path.path.split(',');\n\n    for (let j = 0; j < pathNodes.length - 1; j++) {\n      const curr = `${pathNodes[j]}_${pathNodes[j + 1]}`;\n\n      if (!seen[curr]) {\n        seen[curr] = [path.name];\n      } else {\n        seen[curr].push(path.name);\n      }\n    }\n  }\n\n  for (let i = 0; i < G.nodes.length; i++) {\n    const {\n      id,\n      sequence,\n      length,\n      ...rest\n    } = G.nodes[i];\n    const nodes = []; // break long sequence into multiple nodes, for organic layout\n\n    nodes.push({ ...rest,\n      id: `${id}-start`\n    });\n\n    for (let i = chunkSize; i < length - chunkSize; i += chunkSize) {\n      nodes.push({ ...rest,\n        id: `${id}-${i}`\n      });\n    }\n\n    nodes.push({ ...rest,\n      id: `${id}-end`\n    }); // recreate links\n\n    for (let j = 0; j < nodes.length - 1; j++) {\n      const source = nodes[j].id;\n      const target = nodes[j + 1].id;\n      Gp.links.push({ ...rest,\n        source,\n        target,\n        id,\n        length,\n        sequence,\n        linkNum: i\n      });\n    }\n\n    Gp.nodes = Gp.nodes.concat(nodes);\n  }\n\n  for (let i = 0; i < G.links.length; i++) {\n    const {\n      strand1,\n      strand2,\n      source,\n      target,\n      ...rest\n    } = G.links[i];\n    const paths = seen[`${source}${strand1}_${target}${strand2}`] || [];\n    const loop = source === target; // enumerates cases for which end of source connects to\n    // which end of the target\n\n    const link = {\n      source: `${source}-${strand1 === '+' ? 'end' : 'start'}`,\n      target: `${target}-${strand2 === '+' ? 'start' : 'end'}`,\n      ...rest\n    };\n\n    if (loop) {\n      link.loop = true;\n    }\n\n    if (paths.length) {\n      link.paths = paths;\n    }\n\n    Gp.links.push(link);\n  }\n\n  return Gp;\n} // source https://stackoverflow.com/questions/14446511/ returns an array that\n// contains groupings of xs by attribute key\n\nfunction groupByArray(xs, key) {\n  return xs.reduce(function (rv, x) {\n    const v = key instanceof Function ? key(x) : x[key];\n\n    if (v !== undefined) {\n      const el = rv.find(r => r && r.key === v);\n\n      if (el) {\n        el.values.push(x);\n      } else {\n        rv.push({\n          key: v,\n          values: [x]\n        });\n      }\n    }\n\n    return rv;\n  }, []);\n} // connects successive start->end to a path\n// param edges: {source:{x,y}, target:{x,y}}[]\n\n\nfunction makePath(edges) {\n  const path = [];\n  let i = 0;\n\n  for (; i < edges.length; i++) {\n    const st = edges[i];\n    path.push([st.source.x, st.source.y]);\n  }\n\n  const last = edges[i - 1];\n  path.push([last.target.x, last.target.y]);\n  return path;\n} // groups the edges data structure by the linkNum attribute\n\n\nexport function generatePaths(edges, graph) {\n  const ret = groupByArray(edges, 'linkNum');\n  return ret.map(entry => ({\n    links: makePath(entry.values),\n    original: graph[entry.key]\n  }));\n}\nexport function generateEdges(links, graph) {\n  const result = [];\n\n  for (let i = 0; i < links.length; i++) {\n    const link = links[i];\n    const original = graph[i];\n\n    if (!original.id) {\n      result.push({\n        links: [[link.source.x, link.source.y], [link.target.x, link.target.y]],\n        original\n      });\n    }\n  }\n\n  return result;\n} // implements this algorithm to project a point \"forwards\" from a given contig\n// node translation of simple vector math here\n// https://math.stackexchange.com/questions/175896\n\nexport function projectLine(x1, y1, x2, y2, dt) {\n  const d = Math.sqrt((y2 - y1) ** 2 + (x2 - x1) ** 2);\n  const vx = (x2 - x1) / d;\n  const vy = (y2 - y1) / d;\n  return [x2 + dt * vx, y2 + dt * vy];\n}","import React, { useRef, useMemo, useEffect } from 'react';\nimport { hsl } from 'd3-color';\nimport * as d3drag from 'd3-drag';\nimport { select } from 'd3-selection';\nimport { dot } from 'mathjs';\nimport { forceManyBody, forceLink, forceSimulation, forceCenter } from 'd3-force';\nimport * as d3interpolate from 'd3-scale-chromatic';\nimport { zoom as d3zoom } from 'd3-zoom';\nimport { projectLine, reprocessGraph, generatePaths } from './util';\nconst {\n  schemeCategory10\n} = d3interpolate;\n\nfunction generateLinks(links) {\n  let newlinks = [];\n  let pathIds = [];\n\n  for (let i = 0; i < links.length; i++) {\n    const {\n      paths,\n      ...rest\n    } = links[i];\n\n    if (paths) {\n      for (let j = 0; j < paths.length; j++) {\n        const pathId = paths[j];\n        let pathIndex = pathIds.indexOf(pathId);\n\n        if (pathIndex === -1) {\n          pathIds.push(pathId);\n          pathIndex = pathIds.length - 1;\n        }\n\n        newlinks.push({ ...rest,\n          pathId,\n          pathIndex\n        });\n      }\n    } else {\n      newlinks.push(rest);\n    }\n  }\n\n  return newlinks;\n}\n\nconst Graph = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    graph,\n    drawPaths = false,\n    drawLabels = false,\n    drag = false,\n    settings: {\n      chunkSize = 1000,\n      linkSteps = 3,\n      sequenceThickness = 10,\n      linkThickness = 2,\n      theta = 0.9,\n      strengthCenter = -50\n    },\n    color = 'Rainbow',\n    width = 2000,\n    height = 1000,\n    redraw = 0,\n    onFeatureClick = () => {\n      console.log('no feature click configured');\n    }\n  } = props;\n  const dragRef = useRef();\n  dragRef.current = drag;\n  const data = useMemo(() => {\n    return reprocessGraph(graph, chunkSize);\n  }, [chunkSize, graph]);\n  const colors = useMemo(() => {\n    return Object.fromEntries((graph.paths || []).map((p, i) => {\n      return [p.name, schemeCategory10[i]];\n    }));\n  }, [graph.paths]);\n  useEffect(() => {\n    if (ref.current) {\n      // clone links+nodes because these contain an x,y coordinate that is\n      // physically modified by animation and so when we redraw/refresh, we\n      // want to put them back to normal\n      const links = data.links.map(d => ({ ...d\n      }));\n      const nodes = data.nodes.map(d => ({ ...d\n      })); // clear svg on each run\n\n      ref.current.innerHTML = ''; // animation\n\n      function tickActions() {\n        node.attr('cx', d => d.x).attr('cy', d => d.y);\n        const paths = generatePaths(links, graph.nodes);\n        const nodePathMap = {};\n\n        for (let i = 0; i < paths.length; i++) {\n          const p = paths[i];\n          const l = p.links.length;\n          nodePathMap[`${p.original.id}-start`] = [p.links[1], p.links[0]];\n          nodePathMap[`${p.original.id}-end`] = [p.links[l - 2], p.links[l - 1]];\n        } // from https://stackoverflow.com/questions/16358905/\n\n\n        link.attr('d', function (d) {\n          const x1 = d.source.x;\n          const y1 = d.source.y;\n          const x2 = d.target.x;\n          const y2 = d.target.y;\n\n          if (d.pathIndex === undefined) {\n            let drx = 0;\n            let dry = 0;\n            let xRotation = 0; // degrees\n\n            let largeArc = 0; // 1 or 0\n\n            const sweep = 0; // 1 or 0\n\n            const sid = d.source.id.slice(0, d.source.id.lastIndexOf('-'));\n            const tid = d.target.id.slice(0, d.target.id.lastIndexOf('-'));\n            const same = sid === tid && !d.id;\n            const [s1 = 0, t1 = 0] = nodePathMap[d.source.id] || [];\n            const [s2 = 0, t2 = 0] = nodePathMap[d.target.id] || []; // this checks the dot product of the direction that the node is\n            // oriented (s1,t1) to where the node is connecting to (t1,t2)\n            // other combinations could be chosen here but it helps to\n            // determine whether to draw the arc or not, a circular layout is a\n            // self-connection but does not need an arc\n\n            const dotresult = dot([t1[0] - s1[0], t1[1] - s1[1]], [t1[0] - t2[0], t1[1] - t2[1]]);\n\n            if (same && !Number.isNaN(dotresult) && dotresult > 0) {\n              console.log({\n                dotresult\n              });\n              xRotation = -45;\n              largeArc = 1;\n              drx = 25;\n              dry = 20;\n            }\n\n            return `M${x1},${y1}A${drx},${dry},${xRotation},${largeArc},${sweep} ${x2},${y2}`;\n          } else {\n            const [s1, t1] = nodePathMap[d.source.id];\n            const [s2, t2] = nodePathMap[d.target.id];\n            const m1 = (y2 - y1) / (x2 - x1);\n            const m2 = (s1[1] - t1[1]) / (s1[0] - t1[0]);\n            const m3 = (s2[1] - t2[1]) / (s2[0] - t2[0]);\n\n            if (Math.abs(m1 - m2) < 0.2 || Math.abs(m1 - m3) < 0.2) {\n              const dx = x2 - x1;\n              const dy = y2 - y1;\n              const dr = Math.sqrt(dx * dx + dy * dy) + Math.random() * 40;\n              const sweep = d.pathIndex % 2;\n              return `M${x1},${y1}A${dr},${dr} 0 0,${sweep} ${x2},${y2}`;\n            } else {\n              const [cx1, cy1] = projectLine(s1[0], s1[1], t1[0], t1[1], 20 + d.pathIndex * 30);\n              const [cx2, cy2] = projectLine(s2[0], s2[1], t2[0], t2[1], 20 + d.pathIndex * 30);\n              return `M ${x1} ${y1} C ${cx1} ${cy1}, ${cx2} ${cy2}, ${x2}, ${y2}`;\n            }\n          }\n        });\n        link;\n\n        if (edgepaths) {\n          edgepaths.attr('d', d => `M${d.source.x},${d.source.y}L${d.target.x},${d.target.y}`);\n        }\n      }\n\n      const simulation = forceSimulation().nodes(nodes);\n      const charge_force = forceManyBody().strength(strengthCenter).theta(theta);\n      const center_force = forceCenter(width / 3, height / 3);\n      const link_force = forceLink(links).id(d => d.id).distance(link => link.sequence ? 1 : 10).iterations(linkSteps);\n      simulation.force('charge', charge_force).force('center', center_force).force('links', link_force);\n      simulation.on('tick', tickActions);\n      const svg = select(ref.current); // create arrowhead marker, from\n      // https://observablehq.com/@xianwu/force-directed-graph-network-graph-with-arrowheads-and-lab\n\n      svg.append('defs').append('marker').attr('id', 'arrowhead').attr('viewBox', '-0 -5 10 10') //the bound of the SVG viewport for the current SVG fragment. defines a\n      //coordinate system 10 wide and 10 high starting on (0,-5)\n      .attr('refX', 10) // x coordinate for the reference point of the marker. If circle is\n      // bigger, this need to be bigger.\n      .attr('refY', 0).attr('orient', 'auto').attr('markerWidth', 4).attr('markerHeight', 4).attr('xoverflow', 'visible').append('svg:path').attr('d', 'M 0,-5 L 10 ,0 L 0,5').attr('fill', 'rgba(120,120,120,0.9)').style('stroke', 'none');\n      const g = svg.append('g');\n      const paths = generatePaths(links, graph.nodes);\n      const nodePathMap = {};\n\n      for (let i = 0; i < paths.length; i++) {\n        const p = paths[i];\n        const l = p.links.length;\n        nodePathMap[`${p.original.id}-start`] = [p.links[1], p.links[0]];\n        nodePathMap[`${p.original.id}-end`] = [p.links[l - 2], p.links[l - 1]];\n      }\n\n      const link = g.selectAll('path').data(drawPaths ? generateLinks(links) : links).join('path').attr('marker-end', d => d.id ? undefined : 'url(#arrowhead)').attr('stroke', d => {\n        const same = d.linkNum !== undefined;\n\n        if (same) {\n          const nodeIndex = paths.findIndex(path => {\n            return path.original.id === d.id;\n          });\n          return color.startsWith('Just') ? color.replace('Just', '').toLowerCase() : hsl(d3interpolate[`interpolate${color}`](nodeIndex / paths.length)).darker();\n        } else {\n          if (drawPaths) {\n            return colors[d.pathId];\n          } else {\n            return 'rgba(120,120,120,0.8)';\n          }\n        }\n      }).attr('fill', 'none').attr('stroke-width', d => {\n        return d.linkNum !== undefined ? sequenceThickness : linkThickness;\n      }).on('click', (_, d) => {\n        onFeatureClick(d);\n      });\n      const node = g.selectAll('circle').data(nodes).join('circle').attr('r', 7).attr('fill', 'rgba(255,255,255,0.0)');\n      const edgepaths = g.selectAll('.edgepath').data(links).enter().append('path').attr('d', d => `M${d.source.x},${d.source.y}L${d.target.x},${d.target.y}`).attr('id', (_, i) => 'edgepath-' + i);\n      const edgelabels = g.selectAll('.edgelabel').data(links).enter().append('text').attr('dy', 12).attr('id', (_, i) => 'edgelabel-' + i);\n      edgelabels.append('textPath').attr('href', (_, i) => `#edgepath-${i}`).attr('startOffset', '50%').attr('text-anchor', 'middle').text(d => {\n        const sid = d.source.id.slice(0, d.source.id.lastIndexOf('-'));\n        const tid = d.target.id.slice(0, d.target.id.lastIndexOf('-'));\n        const same = sid === tid && d.id;\n        return same ? sid : '';\n      });\n\n      function drag_start(event, d) {\n        if (!event.active) {\n          simulation.alphaTarget(0.3).restart();\n        }\n\n        d.fx = event.x;\n        d.fy = event.y;\n      }\n\n      function drag_drag(event, d) {\n        d.fx = event.x;\n        d.fy = event.y;\n      }\n\n      function drag_end(event, d) {\n        if (!event.active) simulation.alphaTarget(0);\n        d.fx = null;\n        d.fy = null;\n      }\n\n      var drag_handler = d3drag.drag().on('start', drag_start).on('drag', drag_drag).on('end', drag_end);\n      drag_handler(node);\n      const zoom_handler = d3zoom();\n      zoom_handler.on('zoom', event => {\n        g.attr('transform', event.transform);\n      });\n      zoom_handler(svg);\n    }\n  }, [data.links, data.nodes, color, linkSteps, drawPaths, strengthCenter, sequenceThickness, linkThickness, theta, width, redraw, height]);\n  return /*#__PURE__*/React.createElement(\"svg\", {\n    width: \"100%\",\n    height: \"100%\",\n    ref: ref,\n    style: {\n      fontSize: drawLabels ? 10 : 0\n    },\n    viewBox: [0, 0, width, height].toString()\n  });\n});\nexport default Graph;","import React from 'react'\nimport { Form, Button } from 'react-bootstrap'\n\nexport function Sidebar({\n  onDrawLabels,\n  drawLabels,\n  drawPaths,\n  drag,\n  onDrag,\n  onColorChange,\n  onPathDraw,\n  onRedraw,\n  colorScheme\n}) {\n  return (\n    <div>\n      <p>Settings</p>\n      <Form.Label>Color</Form.Label>\n      <Form.Control\n        value={colorScheme}\n        onChange={(event) => onColorChange(event.target.value)}\n        as='select'\n      >\n        <option>JustGrey</option>\n        <option>Turbo</option>\n        <option>Rainbow</option>\n        <option>Spectral</option>\n        <option>Viridis</option>\n        <option>RdYlBu</option>\n      </Form.Control>\n      <br />\n      <Form.Group>\n        <Form.Check\n          onChange={(event) => {\n            onPathDraw(event.target.checked)\n          }}\n          type='checkbox'\n          label='Draw paths'\n          checked={drawPaths}\n        />\n      </Form.Group>\n      <Form.Group>\n        <Form.Check\n          onChange={(event) => {\n            onDrawLabels(event.target.checked)\n          }}\n          type='checkbox'\n          label='Draw labels'\n          checked={drawLabels}\n        />\n      </Form.Group>\n      <Button onClick={() => onRedraw()}>Redraw</Button>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { Button, Col, Form, Modal, Row } from 'react-bootstrap'\n\nexport function SettingsDialog({\n  onHide,\n  settings: paramSettings,\n  onSettings\n}) {\n  const [settings, setSettings] = useState(paramSettings)\n  const {\n    chunkSize,\n    linkSteps,\n    strengthCenter,\n    theta,\n    sequenceThickness,\n    linkThickness\n  } = settings\n  return (\n    <Modal show={true} onHide={onHide} size='lg'>\n      <Modal.Header closeButton>\n        <Modal.Title>Settings</Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        <Form\n          onSubmit={(event) => {\n            event.preventDefault()\n            onSettings({\n              ...settings,\n              chunkSize: +chunkSize,\n              linkSteps: +linkSteps,\n              strengthCenter: +strengthCenter,\n              theta: +theta,\n              sequenceThickness: +sequenceThickness,\n              linkThickness: +linkThickness\n            })\n            onHide()\n          }}\n        >\n          <Form.Group as={Row}>\n            <Form.Label column sm='4'>\n              Number of simulation steps for the links\n              <Form.Text muted>\n                Increases the rigidity of the link based constraints. May be\n                helpful for circular contigs to increase\n              </Form.Text>\n            </Form.Label>\n            <Col>\n              <Form.Control\n                type='number'\n                value={linkSteps}\n                onChange={(event) => {\n                  const val = event.target.value\n                  setSettings((settings) => ({\n                    ...settings,\n                    linkSteps: val\n                  }))\n                }}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm='4'>\n              Sequence chunk size\n              <Form.Text muted>\n                If a contig is of length 5000, then chunk length 1000 would\n                become 5 segments. Note that contigs smaller than the chunk\n                length may not be proportionally sized\n              </Form.Text>\n            </Form.Label>\n            <Col>\n              <Form.Control\n                type='number'\n                value={chunkSize}\n                onChange={(event) => {\n                  const val = event.target.value\n                  setSettings((settings) => ({\n                    ...settings,\n                    chunkSize: val\n                  }))\n                }}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm='4'>\n              Theta\n              <Form.Text muted>\n                Parameter for the force directed layout\n              </Form.Text>\n            </Form.Label>\n            <Col>\n              <Form.Control\n                type='number'\n                value={theta}\n                onChange={(event) => {\n                  const val = event.target.value\n                  setSettings((settings) => ({\n                    ...settings,\n                    theta: val\n                  }))\n                }}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm='4'>\n              Strength (particle charge)\n              <Form.Text muted>\n                This value is like a charged particle force, by being negative\n                it keeps things farther apart\n              </Form.Text>\n            </Form.Label>\n            <Col>\n              <Form.Control\n                type='number'\n                value={strengthCenter}\n                onChange={(event) => {\n                  const val = event.target.value\n                  setSettings((settings) => ({\n                    ...settings,\n                    strengthCenter: val\n                  }))\n                }}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm='4'>\n              Sequence thickness\n            </Form.Label>\n            <Col>\n              <input\n                type='range'\n                min={1}\n                max={100}\n                style={{ width: '100%' }}\n                value={sequenceThickness}\n                onChange={(event) => {\n                  const val = event.target.value\n                  setSettings((settings) => ({\n                    ...settings,\n                    sequenceThickness: val\n                  }))\n                }}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm='4'>\n              Link thickness\n            </Form.Label>\n            <Col>\n              <input\n                type='range'\n                min={1}\n                max={100}\n                style={{ width: '100%' }}\n                value={linkThickness}\n                onChange={(event) => {\n                  const val = event.target.value\n                  setSettings((settings) => ({\n                    ...settings,\n                    linkThickness: val\n                  }))\n                }}\n              />\n            </Col>\n          </Form.Group>\n\n          <Button type='submit'>Submit</Button>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  )\n}\n","import React, { useRef, useState } from 'react'\nimport { Button, Form, Modal, Navbar, Nav, NavDropdown } from 'react-bootstrap'\nimport { SettingsDialog } from './SettingsDialog'\nimport pkg from '../package.json'\n\nfunction AboutDialog({ onHide }) {\n  return (\n    <Modal show={true} onHide={onHide}>\n      <Modal.Header closeButton>\n        <Modal.Title>graphgenome browser {pkg.version}</Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        <p>\n          This is a small demo of browsing simple graph genomes. The app can\n          read GFA format URLs and local files, all processing is done client\n          side currently.\n        </p>\n        <p>\n          Contact <a href='mainto:colin.diesh@gmail.com'>Colin Diesh</a>\n        </p>\n        <p>\n          Thanks to the BCC2020 pangenome team, and{' '}\n          <a href='https://github.com/rrwick/Bandage'>Bandage</a> for\n          inspiration.\n        </p>\n        <p>\n          Sample data from GFA-spec repo (MT.gfa), Andrea Guarracino (path\n          example), and gfalint (Shaun Jackman)\n        </p>\n        <p>\n          This app attempts to support GFA2 but does not properly render\n          fragments, intricate edge details, or U and O paths\n        </p>\n        <a href='https://github.com/cmdcolin/graphgenomeviewer'>GitHub</a>\n      </Modal.Body>\n    </Modal>\n  )\n}\n\nfunction OpenURLDialog({ onHide, onData }) {\n  const [value, setValue] = useState()\n  return (\n    <Modal show={true} onHide={onHide}>\n      <Modal.Header closeButton>\n        <Modal.Title>graphgenome browser</Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        <Form\n          onSubmit={() => {\n            onData(value)\n            onHide()\n          }}\n        >\n          <Form.Group>\n            <Form.Label>Enter URL</Form.Label>\n            <Form.Control\n              type='input'\n              value={value}\n              onChange={(event) => setValue(event.target.value)}\n            />\n          </Form.Group>\n          <Button type='submit'>Submit</Button>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  )\n}\n\nfunction OpenFileDialog({ onHide, onGraph }) {\n  const ref = useRef()\n  return (\n    <Modal show={true} onHide={onHide}>\n      <Modal.Header closeButton>\n        <Modal.Title>Open file</Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        <Form\n          onSubmit={async (event) => {\n            event.preventDefault()\n            const data = await ref.current.files[0].text()\n            onGraph(data)\n            onHide()\n          }}\n        >\n          <Form.Group>\n            <Form.Label>Open file</Form.Label>\n            <Form.Control ref={ref} type='file' />\n          </Form.Group>\n          <Button type='submit'>Submit</Button>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  )\n}\n\nexport function Header({ onData, settings, onGraph, onExportSVG, onSettings }) {\n  const [showAbout, setShowAbout] = useState()\n  const [showSettings, setShowSettings] = useState()\n  const [showOpenURL, setShowOpenURL] = useState()\n  const [showOpenFile, setShowOpenFile] = useState()\n  return (\n    <>\n      <Navbar bg='light' expand='lg'>\n        <Navbar.Brand href='#home'>graphgenome browser</Navbar.Brand>\n        <Navbar.Toggle aria-controls='basic-navbar-nav' />\n        <Navbar.Collapse id='basic-navbar-nav'>\n          <Nav className='mr-auto'>\n            <NavDropdown title='File' id='basic-nav-dropdown'>\n              <NavDropdown.Item onClick={() => setShowOpenURL(true)}>\n                Open URL\n              </NavDropdown.Item>\n              <NavDropdown.Item onClick={() => setShowOpenFile(true)}>\n                Open file\n              </NavDropdown.Item>\n              <NavDropdown.Item onClick={() => onExportSVG()}>\n                Export SVG\n              </NavDropdown.Item>\n            </NavDropdown>\n            <NavDropdown title='Examples' id='basic-nav-dropdown'>\n              <NavDropdown.Item onClick={() => onData('MT.gfa')}>\n                MT GFA-spec example\n              </NavDropdown.Item>\n              <NavDropdown.Item onClick={() => onData('toy_pangenome.gfa')}>\n                Paths example\n              </NavDropdown.Item>\n              <NavDropdown.Item onClick={() => onData('example1.gfa')}>\n                Paths example 2\n              </NavDropdown.Item>\n              <NavDropdown.Item onClick={() => onData('big1.gfa')}>\n                Big1\n              </NavDropdown.Item>\n              <NavDropdown.Item onClick={() => onData('ir1.gfa')}>\n                Ir1\n              </NavDropdown.Item>\n              <NavDropdown.Item\n                onClick={() =>\n                  onData('test_contig_placement_assembly_graph.gfa')\n                }\n              >\n                Unicycler example\n              </NavDropdown.Item>\n              <NavDropdown.Item onClick={() => onData('circle.gfa')}>\n                Simple circle\n              </NavDropdown.Item>\n              <NavDropdown.Item onClick={() => onData('example1.gfa2')}>\n                GFA2.0 example\n              </NavDropdown.Item>\n            </NavDropdown>\n            <Nav.Link\n              onClick={() => {\n                setShowSettings(true)\n              }}\n            >\n              Settings\n            </Nav.Link>\n            <Nav.Link\n              onClick={() => {\n                setShowAbout(true)\n              }}\n            >\n              About\n            </Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n      {showAbout ? <AboutDialog onHide={() => setShowAbout(false)} /> : null}\n      {showSettings ? (\n        <SettingsDialog\n          settings={settings}\n          onHide={() => setShowSettings(false)}\n          onSettings={onSettings}\n        />\n      ) : null}\n      {showOpenURL ? (\n        <OpenURLDialog onData={onData} onHide={() => setShowOpenURL(false)} />\n      ) : null}\n      {showOpenFile ? (\n        <OpenFileDialog\n          onGraph={onGraph}\n          onHide={() => setShowOpenFile(false)}\n        />\n      ) : null}\n    </>\n  )\n}\n","// adapted from https://observablehq.com/@mbostock/saving-svg\nexport function serialize(svg) {\n  const xmlns = 'http://www.w3.org/2000/xmlns/'\n  const xlinkns = 'http://www.w3.org/1999/xlink'\n  const svgns = 'http://www.w3.org/2000/svg'\n\n  svg = svg.cloneNode(true)\n  const fragment = `${window.location.href}#`\n  const walker = document.createTreeWalker(\n    svg,\n    NodeFilter.SHOW_ELEMENT,\n    null,\n    false\n  )\n  while (walker.nextNode()) {\n    for (const attr of walker.currentNode.attributes) {\n      if (attr.value.includes(fragment)) {\n        attr.value = attr.value.replace(fragment, '#')\n      }\n    }\n  }\n  svg.setAttributeNS(xmlns, 'xmlns', svgns)\n  svg.setAttributeNS(xmlns, 'xmlns:xlink', xlinkns)\n  const serializer = new window.XMLSerializer()\n  const string = serializer.serializeToString(svg)\n  return new Blob([string], { type: 'image/svg+xml' })\n}\n\nfunction parseTag(tag, tags) {\n  const [name, type, val] = tag.split(':')\n  if (type === 'i') {\n    tags[name] = +val\n  } else if (type === 'Z') {\n    tags[name] = val\n  }\n}\n\nexport function parseGFA(file) {\n  const graph = { nodes: [], links: [], paths: [], header: [] }\n  for (const line of file.split('\\n')) {\n    if (line.startsWith('H')) {\n      const headerLine = {}\n      const [, ...rest] = line.split('\\t')\n      rest.forEach((tag) => parseTag(tag, headerLine))\n      graph.header.push(headerLine)\n    }\n    if (line.startsWith('S')) {\n      const [, name, ...rest] = line.split('\\t')\n      let len = 0\n      let seq = ''\n      let tagfields\n      let gfa1 = false\n      if (+rest[0]) {\n        len = +rest[0]\n        seq = rest[1]\n        tagfields = rest.slice(2)\n      } else {\n        gfa1 = true\n        seq = rest[0]\n        len = seq.length\n        tagfields = rest.slice(1)\n      }\n      const tags = {}\n      for (let i = 0; i < tagfields.length; i++) {\n        parseTag(rest[i], tags)\n      }\n      if (gfa1 && tags.LN) {\n        len = tags.LN\n      }\n      graph.nodes.push({ id: name, length: len, sequence: seq, tags })\n    } else if (line.startsWith('E')) {\n      // eslint-disable-next-line no-unused-vars\n      const [, , source, target, , , , , cigar, ...rest] = line.split('\\t')\n      const source1 = source.slice(0, -1)\n      const target1 = target.slice(0, -1)\n      const strand1 = source.charAt(source.length - 1)\n      const strand2 = source.charAt(target.length - 1)\n      const tags = {}\n      for (let i = 0; i < rest.length; i++) {\n        parseTag(rest[i], tags)\n      }\n\n      graph.links.push({\n        source: source1,\n        target: target1,\n        strand1,\n        strand2,\n        cigar,\n        tags\n      })\n    } else if (line.startsWith('L')) {\n      const [, source, strand1, target, strand2, cigar, ...rest] = line.split(\n        '\\t'\n      )\n      const tags = {}\n      for (let i = 0; i < rest.length; i++) {\n        parseTag(rest[i], tags)\n      }\n      graph.links.push({ source, target, strand1, strand2, cigar, tags })\n    } else if (line.startsWith('P')) {\n      const [, name, path, ...rest] = line.split('\\t')\n\n      graph.paths.push({ name, path, rest })\n    }\n  }\n  return graph\n}\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { FeatureDialog } from './FeatureDialog'\nimport Graph from 'graphgenomeviewer'\nimport { Sidebar } from './Sidebar'\nimport { Header } from './Header'\nimport { parseGFA, serialize } from './util'\nimport saveAs from 'file-saver'\nimport {\n  useQueryParams,\n  BooleanParam,\n  StringParam,\n  NumberParam,\n  withDefault\n} from 'use-query-params'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css'\n\nfunction App() {\n  const [featureData, setFeatureData] = useState()\n  const [data, setData] = useState()\n  const [error, setError] = useState()\n  const [, updateState] = useState()\n  const forceUpdate = React.useCallback(() => updateState({}), [])\n  const [redraw, setRedraw] = useState(0)\n  const [query, setQuery] = useQueryParams({\n    strengthCenter: withDefault(NumberParam, -50),\n    strengthXY: withDefault(NumberParam, 0.1),\n    chunkSize: withDefault(NumberParam, 1000),\n    forceSteps: withDefault(NumberParam, 200),\n    linkSteps: withDefault(NumberParam, 1),\n    sequenceThickness: withDefault(NumberParam, 10),\n    linkThickness: withDefault(NumberParam, 2),\n    theta: withDefault(NumberParam, 0.9),\n    forceType: withDefault(StringParam, 'center'),\n    dataset: withDefault(StringParam, 'MT.gfa'),\n    colorScheme: withDefault(StringParam, 'Rainbow'),\n    drawLabels: withDefault(BooleanParam, false),\n    drawPaths: withDefault(BooleanParam, false),\n    drag: withDefault(BooleanParam, true)\n  })\n\n  const {\n    dataset,\n    drawLabels,\n    drawPaths,\n    colorScheme,\n    drag,\n    ...settings\n  } = query\n\n  const ref = useRef()\n  useEffect(() => {\n    ;(async () => {\n      try {\n        const result = await fetch(dataset)\n        if (!result.ok) {\n          throw new Error(`Failed to fetch ${result.statusText}`)\n        }\n        const text = await result.text()\n        setData(text)\n        setError(undefined)\n      } catch (e) {\n        console.error(e)\n        setError(e.message)\n      }\n    })()\n  }, [dataset])\n\n  const graph = useMemo(() => {\n    return data ? parseGFA(data) : undefined\n  }, [data])\n\n  return (\n    <div>\n      <Header\n        onData={(value) => {\n          setQuery({ dataset: value })\n          forceUpdate()\n        }}\n        onGraph={(graph) => {\n          setData(graph)\n        }}\n        onSettings={(settings) => {\n          setQuery(settings)\n          forceUpdate()\n        }}\n        onExportSVG={() => {\n          saveAs(serialize(ref.current))\n        }}\n        settings={settings}\n      />\n      {featureData ? (\n        <FeatureDialog\n          data={featureData}\n          onModal={(data) => {\n            setFeatureData(data)\n          }}\n          onHide={() => {\n            setFeatureData(undefined)\n          }}\n        />\n      ) : null}\n      <div className='flexcontainer'>\n        <div id='sidebar' className='sidebar'>\n          <Sidebar\n            colorScheme={colorScheme}\n            drawPaths={drawPaths}\n            drawLabels={drawLabels}\n            drag={drag}\n            onColorChange={(value) => {\n              setQuery({ colorScheme: value })\n              forceUpdate()\n            }}\n            onDrawLabels={(value) => {\n              setQuery({ drawLabels: value })\n              forceUpdate()\n            }}\n            onDrag={(value) => {\n              setQuery({ drag: value })\n              forceUpdate()\n            }}\n            onPathDraw={(value) => {\n              setQuery({ drawPaths: value })\n              forceUpdate()\n            }}\n            onRedraw={() => setRedraw((redraw) => redraw + 1)}\n          />\n        </div>\n        <div className='body'>\n          {error ? <div style={{ color: 'red' }}>{error}</div> : null}\n          {graph ? (\n            <Graph\n              graph={graph}\n              ref={ref}\n              redraw={redraw}\n              drag={drag}\n              color={colorScheme}\n              drawLabels={drawLabels}\n              drawPaths={drawPaths}\n              onFeatureClick={(data) => {\n                setFeatureData(data)\n              }}\n              settings={settings}\n            />\n          ) : null}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { QueryParamProvider } from 'use-query-params'\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryParamProvider>\n      <App />\n    </QueryParamProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n\n"],"sourceRoot":""}